class Solution {
    public String addBinary(String a, String b) {
        StringBuilder result = new StringBuilder();
        int carry = 0; // Initialize carry
        int i = a.length() - 1; // Pointer for string a
        int j = b.length() - 1; // Pointer for string b
        
        // Iterate through both strings from end to start
        while (i >= 0 || j >= 0 || carry != 0) {
            int sum = carry;
            
            // Add the current digit of a, if available
            if (i >= 0) {
                sum += a.charAt(i) - '0'; // Convert char to int
                i--;
            }
            
            // Add the current digit of b, if available
            if (j >= 0) {
                sum += b.charAt(j) - '0'; // Convert char to int
                j--;
            }
            
            // Compute the result digit and the new carry
            result.append(sum % 2); // Append the least significant bit
            carry = sum / 2; // Update carry for the next iteration
        }
        
        // The result is built in reverse order
        return result.reverse().toString();
    }
}
