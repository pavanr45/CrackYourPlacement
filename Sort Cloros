//Counting Sort Approach
public class Solution {
    public void sortColors(int[] nums) {
        int zeros = 0, ones = 0, n = nums.length;
        for (int num : nums) {
            if (num == 0) zeros++;
            else if (num == 1) ones++;
        }

        for (int i = 0; i < zeros; ++i) {
            nums[i] = 0;
        }

        for (int i = zeros; i < zeros + ones; ++i) {
            nums[i] = 1;
        }

        for (int i = zeros + ones; i < n; ++i) {
            nums[i] = 2;
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        int[] nums1 = {2, 0, 2, 1, 1, 0};
        solution.sortColors(nums1);
        System.out.println(Arrays.toString(nums1)); // Output: [0, 0, 1, 1, 2, 2]

        int[] nums2 = {2, 0, 1};
        solution.sortColors(nums2);
        System.out.println(Arrays.toString(nums2)); // Output: [0, 1, 2]

        int[] nums3 = {0};
        solution.sortColors(nums3);
        System.out.println(Arrays.toString(nums3)); // Output: [0]

        int[] nums4 = {1, 2, 0};
        solution.sortColors(nums4);
        System.out.println(Arrays.toString(nums4)); // Output: [0, 1, 2]
    }
}
